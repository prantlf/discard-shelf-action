name: Test or Release

on:
  push:
    branches:
      - master
    tags-ignore:
      - '**'
    paths-ignore:
      - '**/*.md'
      - LICENSE
  pull_request:

jobs:

  prepare:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - run: |
        cp LICENSE LICENSE-linux-x64.zip
        cp LICENSE LICENSE-macos-x64.zip
        cp LICENSE LICENSE-windows-x64.zip
        cp README.md README-linux-x64.zip
        cp README.md README-macos-x64.zip
        cp README.md README-windows-x64.zip
      shell: bash
    - uses: actions/cache/save@v4
      with:
        path: LICENSE-linux-x64.zip
        key: LICENSE-linux-x64.zip-${{ github.sha }}
    - uses: actions/cache/save@v4
      with:
        path: LICENSE-macos-x64.zip
        key: LICENSE-macos-x64.zip-${{ github.sha }}
    - uses: actions/cache/save@v4
      with:
        path: LICENSE-windows-x64.zip
        key: LICENSE-windows-x64.zip-${{ github.sha }}
    - uses: actions/cache/save@v4
      with:
        path: README-linux-x64.zip
        key: README-linux-x64.zip-${{ github.sha }}
    - uses: actions/cache/save@v4
      with:
        path: README-macos-x64.zip
        key: README-macos-x64.zip-${{ github.sha }}
    - uses: actions/cache/save@v4
      with:
        path: README-windows-x64.zip
        key: README-windows-x64.zip-${{ github.sha }}

  test:
    needs:
      - prepare
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: ./
    - uses: actions/cache/restore@v4
      with:
        path: LICENSE-linux-x64.zip
        key: LICENSE-linux-x64.zip-${{ github.sha }}
        fail-on-cache-miss: false
        enableCrossOsArchive: true
    - uses: actions/cache/restore@v4
      with:
        path: LICENSE-macos-x64.zip
        key: LICENSE-macos-x64.zip-${{ github.sha }}
        fail-on-cache-miss: false
        enableCrossOsArchive: true
    - uses: actions/cache/restore@v4
      with:
        path: LICENSE-windows-x64.zip
        key: LICENSE-windows-x64.zip-${{ github.sha }}
        fail-on-cache-miss: false
        enableCrossOsArchive: true
    - run: |
        if [ -f "LICENSE-linux-x64.zip" ]; then
          echo "LICENSE-linux-x64.zip exists"
          exit 1
        fi
        if [ -f "LICENSE-macos-x64.zip" ]; then
          echo "LICENSE-macos-x64.zip exists"
          exit 1
        fi
        if [ -f "LICENSE-windows-x64.zip" ]; then
          echo "LICENSE-windows-x64.zip exists"
          exit 1
        fi
      shell: bash
    - uses: ./
      with:
        name: README
        include-windows: false
    - uses: actions/cache/restore@v4
      with:
        path: README-linux-x64.zip
        key: README-linux-x64.zip-${{ github.sha }}
        fail-on-cache-miss: false
        enableCrossOsArchive: true
    - uses: actions/cache/restore@v4
      with:
        path: README-macos-x64.zip
        key: README-macos-x64.zip-${{ github.sha }}
        fail-on-cache-miss: false
        enableCrossOsArchive: true
    - uses: actions/cache/restore@v4
      with:
        path: README-windows-x64.zip
        key: README-windows-x64.zip-${{ github.sha }}
        fail-on-cache-miss: true
        enableCrossOsArchive: true
    - shell: bash
      run: |
        if [ -f "README-linux-x64.zip" ]; then
          echo "README-linux-x64.zip exists"
          exit 1
        fi
        if [ -f "README-macos-x64.zip" ]; then
          echo "README-macos-x64.zip exists"
          exit 1
        fi
        if [ ! -f "README-windows-x64.zip" ]; then
          echo "README-windows-x64.zip does not exist"
          exit 1
        fi
    - uses: prantlf/delete-cache-action@v3
      with:
        key: README-windows-x64.zip-${{ github.sha }}
    - uses: prantlf/publish-release-action@v1
      with:
        no-bump: true
        no-archives: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
